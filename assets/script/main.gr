event onLoad() {
    /*Camera camera = Camera();
    setCamera(camera);*/
    let camera = getCamera();
    camera:position(0., .5, 2.);

    Light light = loadLight();
    light:position(0., 1., 0.);

    Quad quad = loadQuad(light);
    //Model tree = loadModel("tree/scene", light);
    //Model grass = loadModel("grass/scene", light);
    //Model ground = loadModel("ground/scene", light);
    Model bunny = loadModel("bunny/scene", light);
    //Model statue = loadModel("statue/scene", light);
    //Model jupiter = loadModel("jupiter/scene", light);
    //Model asteroid = loadModel("asteroid/scene", light);

    int nbAsteroids = 100;
    array(vec3) positions;
    array(quat) rotations;
    array(vec3) scales;

    // Radius for asteroid belt
    real radius = 100.0f;

    // Standard deviation from radius
    real radiusDeviation = 25.0f;

    // Gets stuck?
    /*loop(i, nbAsteroids) {
        real x = random();
        real y = ((random() % 2) * 2 - 1) * root(1.0f - x * x);

        real finalRadius = radius + rand() * radiusDeviation;

        positions ~ vec3(x * finalRadius, random(), y * finalRadius);
        rotations ~ quat(1.0f, random(), random(), random());
        scales ~ vec3(0.1 * random(), 0.1 * random(), 0.1 * random());
    }*/

    bunny:position(vec3(1f, 0f, 0f));

    int counter;
    loop {
        // Draw calls
        light:draw();

        quad:draw();
        //tree:draw();
        //grass:draw();
        //ground:draw();
        bunny:draw();
        //statue:draw();
        //jupiter:draw();
        //asteroid:draw(positions[0]);

        /*loop(i, nbAsteroids) {
            asteroid:draw(positions[i], rotations[i], scales[i]);
        }*/

        // Next frame
        counter++;
        yield
    }
}